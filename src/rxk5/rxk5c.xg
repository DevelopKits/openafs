/*
 * Copyright (c) 2005
 * The Regents of the University of Michigan
 * ALL RIGHTS RESERVED
 *
 * Permission is granted to use, copy, create derivative works 
 * and redistribute this software and such derivative works 
 * for any purpose, so long as the name of the University of 
 * Michigan is not used in any advertising or publicity 
 * pertaining to the use or distribution of this software 
 * without specific, written prior authorization.  If the 
 * above copyright notice or any other identification of the 
 * University of Michigan is included in any copy of any 
 * portion of this software, then the disclaimer below must 
 * also be included.
 *
 * This software is provided as is, without representation 
 * from the University of Michigan as to its fitness for any 
 * purpose, and without warranty by the University of 
 * Michigan of any kind, either express or implied, including 
 * without limitation the implied warranties of 
 * merchantability and fitness for a particular purpose.  The 
 * regents of the University of Michigan shall not be liable 
 * for any damages, including special, indirect, incidental, or 
 * consequential damages, with respect to any claim arising 
 * out of or in connection with the use of the software, even 
 * if it has been or is hereafter advised of the possibility of 
 * such damages.
 */

%#include <rx/rxk5.h>

%#ifndef TRUE
%#define TRUE 1
%#endif
%#ifndef FALSE
%#define FALSE 0
%#endif

const MAXRENCRYPTEDLEN = 256;
const RXK5C_VERSION = 0;
const DK_CUSTOM = 0;

struct rxk5c_challenge {
   afs_int32 vers;
   afs_int32 challengeid;
   afs_int32 level;
};

struct rxk5c_endpoint {
    afs_int32 cuid[2];
    afs_int32 securityindex;
};

struct rxk5c_response_encrypted {
    rxk5c_endpoint endpoint;
    afs_int32 incchallengeid;
    afs_int32 level;
    afs_int32 cktype;
    afs_int32 dktype;
    afs_int32 callnumbers[RX_MAXCALLS];
    opaque rxk5c_key<RXK5_MAXKTCTICKETLEN>;
};

struct rxk5c_response {
    afs_int32 vers;
    afs_int32 skeyidx;
    opaque rxk5c_encrypted<MAXRENCRYPTEDLEN>;
    opaque rxk5c_ticket<RXK5_MAXKTCTICKETLEN>;
};

/* pseudo-header for integrity purposes */
struct rxk5c_pshead {
    afs_int32 epoch;
    afs_int32 cid;	/* includes call channel */
    afs_int32 callnumber;
    afs_int32 seq;
    afs_int32 securityindex;
};
