# Copyright 2000, International Business Machines Corporation and others.
# All Rights Reserved.
#
# This software has been released under the terms of the IBM Public
# License.  For details, see the LICENSE file in the top-level source
# directory or online at http://www.openafs.org/dl/license10.html

srcdir=@srcdir@
include @TOP_OBJDIR@/src/config/Makefile.config
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@

<rxk5>
K5SSL_DEF=@K5SSL_DEF@
K5SSL_INC=@K5SSL_INC@

AFS_K5SSL_AES = e_aes.o aes_cbc.o aes_cfb.o aes_ecb.o aes_ofb.o rijndael.o
#AFS_K5SSL_CAST = e_cast.o cast_cbc.o cast_cfb.o cast_ecb.o cast_ofb.o cast.o
AFS_K5SSL_DES3 = e_des3.o des3_cbc.o des3_cfb.o des3_ecb.o des3_ofb.o des.o
AFS_K5SSL_DES = e_des.o des_cbc.o des_cfb.o des_ecb.o des_ofb.o
AFS_K5SSL_RC4 = e_rc4.o rc4.o
#AFS_K5SSL_RC6 = e_rc6.o rc6_cbc.o rc6_cfb.o rc6_ecb.o rc6_ofb.o rc6.o

AFS_K5SSL_OBJS = k5s_ck.o k5s_evp.o k5s_rn.o k5s_cm.o k5s_in.o \
	$(AFS_K5SSL_AES) $(AFS_K5SSL_CAST) \
	$(AFS_K5SSL_DES) $(AFS_K5SSL_DES3) \
	$(AFS_K5SSL_RC4) $(AFS_K5SSL_RC6) \
	m_crc32.o \
	m_md4.o \
	m_md5.o \
	md4c.o \
	md5c.o \
	m_sha1.o \
	shs.o

AFS_RXK5_OBJS = \
	rxk5_tkt.o \
	rxkad_tkt.o \
	afs_token.xdr.o \
	rxk5_client.o \
	rxk5_common.o \
	rxk5c.xdr.o \
	xdr_mem.o

<all>
# OS specific object files:
AFS_OS_OBJS = \
	osi_groups.o \
	osi_inode.o \
	osi_file.o \
	osi_sleep.o \
	osi_vm.o \
<rxk5>
	$(AFS_RXK5_OBJS) \
	$(AFS_K5SSL_OBJS) \
<all>
	osi_vnodeops.o

AFS_OS_NFSOBJS = \
	osi_vfsops_nfs.o

AFS_OS_NONFSOBJS = \
	osi_vfsops.o

# System specific build commands and flags
DEFINES= -DAFSDEBUG -DKERNEL -DAFS -DVICE -DNFS -DUFS -DINET -DQUOTA -DGETMOUNT ${K5SSL_DEF}
#These are redundant
#LD = /usr/ccs/bin/ld
#LORDER = /usr/ccs/bin/lorder
#CC = /opt/SUNWspro/bin/cc
KDEFS= -D_KERNEL -DSYSV -dn ${ARCH_DEFS}

<sun4x_57 sun4x_58 sun4x_59 sun4x_510 sun4x_511>
KDEFS_32 =
KDEFS_64 = -xarch=v9

<sunx86_57 sunx86_58 sunx86_59 sunx86_510 sunx86_511>
KDEFS_32 =
KDEFS_64 = -xarch=amd64 -xmodel=kernel

<all>
CFLAGS=-I. -I.. -I${TOP_OBJDIR}/src/config ${FSINCLUDES} ${K5SSL_INC} \
	   -I${TOP_SRCDIR}/rxk5 \
	   $(DEFINES) $(KDEFS) $(KOPTS) ${DBUG}

# Name of directory to hold object files and libraries.
<all -sun4x_57 -sun4x_58 -sun4x_59 -sun4x_510 -sun4x_511 -sunx86_57 -sunx86_58 -sunx86_59 -sunx86_510 -sunx86_511>
KOBJ = MODLOAD
<sun4x_57 sun4x_58 sun4x_59 sunx86_57 sunx86_58 sunx86_59 sunx86_510 sunx86_511>
KOBJ = MODLOAD32 MODLOAD64
<sun4x_510 sun4x_511>
KOBJ = MODLOAD64

# This tells Makefile.common to use it's single directory build target.
<all -sun4x_57 -sun4x_58 -sun4x_59 -sun4x_510 -sun4x_511 -sunx86_57 -sunx86_58 -sunx86_59 -sunx86_510 -sunx86_511>
COMPDIRS = single_compdir
INSTDIRS = single_instdir
DESTDIRS = single_destdir

<sun4x_57 sun4x_58 sun4x_59 sun4x_510 sun4x_511 sunx86_57 sunx86_58 sunx86_59 sunx86_510 sunx86_511>
COMPDIRS = solaris_compdirs
INSTDIRS = solaris_instdirs
DESTDIRS = solaris_destdirs

<all>
include Makefile.common


setup:
	-$(RM) -f  h net netinet rpc ufs nfs  machine sys inet
	-ln -fs /usr/include/sys h
	-ln -fs /usr/include/net net
	-ln -fs /usr/include/netinet netinet
	-ln -fs /usr/include/rpc rpc
	-ln -fs /usr/include/sys sys
	-ln -fs /usr/include/nfs nfs
	-ln -fs /usr/include/inet inet
	-ln -fs /usr/include/ufs ufs
	for t in ${KOBJ} ; do \
		echo Making directory: $$t; \
		mkdir -p $$t; \
		$(RM) -f $$t/Makefile.common $$t/Makefile $$t/config ; \
		ln -fs ../Makefile.common $$t/Makefile.common ; \
		ln -fs ../Makefile $$t/Makefile ;\
		ln -fs ../config $$t/config ;\
	done


## This is the target for a Solaris 7. Here we build both the 32 bit and
## the 64 bit libafs in MODLOAD32 and MODLOAD64 directories respectively

<sun4x_57 sun4x_58 sun4x_59 sun4x_510 sun4x_511 sunx86_57 sunx86_58 sunx86_59 sunx86_510 sunx86_511>
${COMPDIRS} ${INSTDIRS} ${DESTDIRS}:
	for t in ${KOBJ} ; do \
		echo Building directory: $$t ; \
		case $$t in \
			MODLOAD32) \
			 ARCH_DEFS="${KDEFS_32}" ; \
			 BITS="" ;; \
			MODLOAD64) \
			 ARCH_DEFS="${KDEFS_64}" ; \
			 BITS="64" ;; \
		esac ; \
		export ARCH_DEFS ; \
		export BITS ; \
		cd $$t  ; \
		$(MAKE) $@_libafs ; \
		cd ../ ;\
	done

solaris_compdirs_libafs: depsrcs libafs
solaris_instdirs_libafs: install_libafs
solaris_destdirs_libafs: dest_libafs

<all>

# Below this line are targets when in the COMMON directory:
LIBAFS = libafs.o
LIBAFSNONFS = libafs.nonfs.o

<all -sun4x_57 -sun4x_58 -sun4x_59>
INST_LIBAFS = ${DESTDIR}${afskerneldir}/${LIBAFS}
INST_LIBAFSNONFS = ${DESTDIR}${afskerneldir}/${LIBAFSNONFS}

DEST_LIBAFS = ${DEST}/root.client/usr/vice/etc/modload/${LIBAFS}
DEST_LIBAFSNONFS = ${DEST}/root.client/usr/vice/etc/modload/${LIBAFSNONFS}

<sun4x_57 sun4x_58 sun4x_59 sun4x_510 sun4x_511 sunx86_57 sunx86_58 sunx86_59 sunx86_510 sunx86_511>
INST_LIBAFSNONFS = ${DESTDIR}${afskerneldir}/libafs${BITS}.nonfs.o
INST_LIBAFS = ${DESTDIR}${afskerneldir}/libafs${BITS}.o

DEST_LIBAFSNONFS = ${DEST}/root.client/usr/vice/etc/modload/libafs${BITS}.nonfs.o
DEST_LIBAFS = ${DEST}/root.client/usr/vice/etc/modload/libafs${BITS}.o

<all>

# Without this line, gmake tries to build libafs.o
.PHONY: libafs

libafs:	$(LIBAFSNONFS) $(LIBAFS)

install_libafs:	$(LIBAFS) $(LIBAFSNONFS)
	${INSTALL} -d ${DESTDIR}${afskerneldir}
	${INSTALL} -m 644 $(LIBAFS) $(INST_LIBAFS)
	${INSTALL} -m 644 $(LIBAFSNONFS) $(INST_LIBAFSNONFS)

dest_libafs: $(LIBAFS) $(LIBAFSNONFS)
	${INSTALL} -d ${DEST}/root.client/usr/vice/etc/modload
	${INSTALL} -m 644 $(LIBAFS) $(DEST_LIBAFS)
	${INSTALL} -m 644 $(LIBAFSNONFS) $(DEST_LIBAFSNONFS)

${LIBAFS}: $(AFSAOBJS) $(AFSNFSOBJS)
	$(RM) -f $@
	$(LD) -r -o $@ $(AFSAOBJS) ${AFSNFSOBJS}

${LIBAFSNONFS}:  $(AFSAOBJS) $(AFSNONFSOBJS)
	$(RM) -f $@
	$(LD) -r -o $@  $(AFSAOBJS) ${AFSNONFSOBJS}

