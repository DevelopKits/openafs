# Copyright 2000, International Business Machines Corporation and others.
# All Rights Reserved.
#
# This software has been released under the terms of the IBM Public
# License.  For details, see the LICENSE file in the top-level source
# directory or online at http://www.openafs.org/dl/license10.html
#
# OpenBSD version by Jim Rees

srcdir=@srcdir@
include @TOP_OBJDIR@/src/config/Makefile.config

<rxk5>
K5SSL_DEF=@K5SSL_DEF@
K5SSL_INC=@K5SSL_INC@

AFS_K5SSL_AES = e_aes.o aes_cbc.o aes_cfb.o aes_ecb.o aes_ofb.o rijndael.o
#AFS_K5SSL_CAST = e_cast.o cast_cbc.o cast_cfb.o cast_ecb.o cast_ofb.o cast.o
AFS_K5SSL_DES3 = e_des3.o des3_cbc.o des3_cfb.o des3_ecb.o des3_ofb.o des.o
AFS_K5SSL_DES = e_des.o des_cbc.o des_cfb.o des_ecb.o des_ofb.o
AFS_K5SSL_RC4 = e_rc4.o rc4.o
#AFS_K5SSL_RC6 = e_rc6.o rc6_cbc.o rc6_cfb.o rc6_ecb.o rc6_ofb.o rc6.o

AFS_K5SSL_OBJS = k5s_ck.o k5s_evp.o k5s_rn.o k5s_cm.o k5s_in.o \
	$(AFS_K5SSL_AES) $(AFS_K5SSL_CAST) \
	$(AFS_K5SSL_DES) $(AFS_K5SSL_DES3) \
	$(AFS_K5SSL_RC4) $(AFS_K5SSL_RC6) \
	m_crc32.o \
	m_md4.o \
	m_md5.o \
	md4c.o \
	md5c.o \
	m_sha1.o \
	shs.o

AFS_RXK5_OBJS = \
	rxk5_tkt.o \
	rxkad_tkt.o \
	afs_token.xdr.o \
	rxk5_client.o \
	rxk5_common.o \
	rxk5c.xdr.o \
	xdr_mem.o

<all>
# System specific build commands and flags
KSRC = @BSD_KERNEL_PATH@
KFLAGS= -Wall -nostdinc
<i386_obsd33>
KFLAGS+= -fno-stack-protector
<all>
KDEFS= \
    ${KFLAGS} \
    -I/usr/include -I${KSRC}/sys \
    ${K5SSL_INC} -I${TOP_SRCDIR}/rxk5 \
    -DLKM -DDIAGNOSTIC -DFIFO -DNFSCLIENT -DMFS -DFFS -D_KERNEL -DI586_CPU \
    -DI686_CPU
DBUG= -O2
DEFINES= -DAFSDEBUG -DKERNEL -DAFS -DVICE -DNFS -DUFS -DINET -DQUOTA -DGETMOUNT ${K5SSL_DEF}
OPTF= ${OPT}
OPTF2= ${OPT2}
CFLAGS= ${FSINCLUDES} ${DEFINES} ${KDEFS} ${KOPTS} ${DBUG}

# Name of directory to hold object files and libraries.
KOBJ = MODLOAD

# OS specific object files:
AFS_OS_OBJS = \
	osi_groups.o \
	osi_file.o \
	osi_misc.o \
	osi_sleep.o \
	osi_vm.o \
<rxk5>
	$(AFS_RXK5_OBJS) \
	$(AFS_K5SSL_OBJS) \
<all>
	osi_vnodeops.o

#AFS_OS_NFSOBJS = osi_vfsops_nfs.o

AFS_OS_NONFSOBJS = osi_vfsops.o

# This tells Makefile.common to use its single directory build target.
COMPDIRS = single_compdir
INSTDIRS = single_instdir
DESTDIRS = single_destdir

TOP_SRCDIR = ../..

include Makefile.common

COMMON_INCLUDE = \
	-I.. \
	-I../nfs \
	-I${TOP_SRCDIR} \
	-I${TOP_SRCDIR}/afs \
	-I${TOP_SRCDIR}/afs/${MKAFS_OSTYPE} \
	-I${TOP_SRCDIR}/config \
	-I${TOP_SRCDIR}/rx \
	-I${TOP_SRCDIR}/rx/${MKAFS_OSTYPE} \
	-I${TOP_SRCDIR}/rxkad \
	-I${TOP_SRCDIR}/domestic \
	-I${TOP_SRCDIR}/util \
	-I${TOP_SRCDIR}/../include \
	-I${TOP_SRCDIR}/../include/afs

setup:
	-mkdir $(KOBJ)
	-$(RM) -f  $(KOBJ)/Makefile $(KOBJ)/Makefile.common $(KOBJ)/config
	ln -fs ../Makefile $(KOBJ)/Makefile
	ln -fs ../Makefile.common $(KOBJ)/Makefile.common
	-$(RM) -f  h lib
	-ln -fs ${KSRC}/sys h
	-ln -fs ${KSRC}/lib .
	-touch $(KOBJ)/sec_net.h


# Below this line are targets when in the COMMON directory:
LIBAFS = libafs.nfs.o
LIBAFSNONFS = libafs.o

INST_LIBAFS = ${DESTDIR}${afskerneldir}/${LIBAFS}
INST_LIBAFSNONFS = ${DESTDIR}${afskerneldir}/${LIBAFSNONFS}

DEST_LIBAFS = ${DEST}/root.client/bin/${LIBAFS}
DEST_LIBAFSNONFS = ${DEST}/root.client/bin/${LIBAFSNONFS}


libafs:	$(LIBAFSNONFS)
	ls -l libafs.o
install_libafs:	$(INST_LIBAFSNONFS)
dest_libafs:	$(DEST_LIBAFSNONFS)

$(INST_LIBAFS): $(LIBAFS)
	$(INSTALL) -f $? $@

$(INST_LIBAFSNONFS): $(LIBAFSNONFS)
	$(INSTALL) -f $? $@

$(DEST_LIBAFS): $(LIBAFS)
	$(INSTALL) -f $? $@

$(DEST_LIBAFSNONFS): $(LIBAFSNONFS)
	$(INSTALL) -f $? $@

${LIBAFS}: $(AFSAOBJS) $(AFSNFSOBJS)
	$(LD) -r -o ${LIBAFS} ${AFSAOBJS} ${AFSNFSOBJS}

${LIBAFSNONFS}:  $(AFSAOBJS) $(AFSNONFSOBJS)
	$(LD) -r -o ${LIBAFSNONFS} ${AFSAOBJS} ${AFSNONFSOBJS}
